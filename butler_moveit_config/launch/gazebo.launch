<?xml version="1.0"?>
<launch>
  <!-- Gazebo options -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
<<<<<<< HEAD
  <arg name="initial_joint_positions" default=" -J gripper_robotiq_85_left_knuckle_joint 0 -J ur5_elbow_joint 2.3174 -J ur5_shoulder_lift_joint -1.8803 -J ur5_shoulder_pan_joint 0 -J ur5_wrist_1_joint -1.0999 -J ur5_wrist_2_joint 0 -J ur5_wrist_3_joint 2.66163" doc="Initial joint configuration of the robot"/>
=======
  <arg name="initial_joint_positions" default=" -J ur5_elbow_joint 2.3174 -J ur5_shoulder_lift_joint -1.8803 -J ur5_shoulder_pan_joint 0 -J ur5_wrist_1_joint -1.0999 -J ur5_wrist_2_joint 0 -J ur5_wrist_3_joint 2.66163" doc="Initial joint configuration of the robot"/>
>>>>>>> 0fff205e22b80033fad84d8c62cb3e19703309a8

  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
  </include>

  <!-- Set the robot urdf on the parameter server -->
<<<<<<< HEAD
  <param name="robot_description" textfile="$(find butler_moveit_config)/config/gazebo_butler.urdf" />
=======
  <param name="robot_description" command="xacro  '$(find butler_description)/urdf/butler/butler.urdf.xacro'" />
>>>>>>> 0fff205e22b80033fad84d8c62cb3e19703309a8

  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Load the controller parameters onto the parameter server -->
  <rosparam file="$(find butler_moveit_config)/config/gazebo_controllers.yaml" />
  <include file="$(dirname)/ros_controllers.launch"/>

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
</launch>
